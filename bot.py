import requests
import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
import os
import threading
from flask import Flask

# üîê –í—Å—Ç–∞–≤—å —Å—é–¥–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω
TOKEN = "7357522794:AAHqsKsbtForBWBF9bzve6FUx-AXggD5dDc"
print(f"TOKEN is: {TOKEN}")
bot = telebot.TeleBot(TOKEN)


def download_video_if_needed(name, url):
    path = f"videos/{name}"
    if not os.path.exists(path):
        print(f"–°–∫–∞—á–∏–≤–∞—é: {name}")
        response = requests.get(url)
        with open(path, "wb") as f:
            f.write(response.content)
    else:
        print(f"–§–∞–π–ª —É–∂–µ –µ—Å—Ç—å: {name}")

# üìö –°–ø–∏—Å–æ–∫ —É—Ä–æ–∫–æ–≤ (–≤–∏–¥–µ–æ –∏ —Ç–∞–±—ã)
lessons = [
    ("—É—Ä–æ–∫01-–∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ.mp4", "https://drive.google.com/uc?export=download&id=1Iyl7ujjeEn-V93svPkz1mmlQwD-GYU5K"),
    ("—É—Ä–æ–∫02-–ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞.mp4", "https://drive.google.com/uc?export=download&id=1u4pHTFO7Q25GaW1kXgUuLSsxJubSsNZ4"),
    ("—É—Ä–æ–∫03-–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è_–ø–æ—Å–∞–¥–∫–∞.mp4", "https://drive.google.com/uc?export=download&id=1UTLnKOVgPCqOFPcCXzaE5GVLvkf4x0Yr"),
    ("—É—Ä–æ–∫04-–ø—Ä–∞–≤–∞—è_—Ä—É–∫–∞.mp4", "https://drive.google.com/uc?export=download&id=14AI8kPiZ3hrCn0TAFTjRBoU_kGEEca2h"),
    ("—É—Ä–æ–∫05-–ª–µ–≤–∞—è_—Ä—É–∫–∞.mp4", "https://drive.google.com/uc?export=download&id=1MsbsQsV1G8wUn7ibQJm2a0-V7ndOuJ5b"),
    ("—É—Ä–æ–∫06-–ü–µ—Ä–≤–æ–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ.mp4", "https://drive.google.com/uc?export=download&id=1sirmU7Kg4kb8Iq3U8bCzH8rgWrvXgTXw"),
    ("—É—Ä–æ–∫07-–ú–∏—Å—Å–∏—è –Ω–µ–≤—ã–ø–æ–ª–Ω–∏–º–∞.mp4", "https://drive.google.com/uc?export=download&id=1x_5ukYQCBto9iZ8E2CPv4YDClI2iA7fP"),
    ("—É—Ä–æ–∫08-–ß–∏—Ç–∞–µ–º —Ç–∞–±—ã.mp4", "https://drive.google.com/uc?export=download&id=1iHAu5XxC2Kizu4yhjxqw7QRc3JqSw4Ra"),
    ("—É—Ä–æ–∫08-Prayer in C.mp4", "https://drive.google.com/uc?export=download&id=1ZQflDQlXXmJFDxeQ0atOWewToe9SswMv"),
    ("—É—Ä–æ–∫09-–ß–µ—Ä–µ–¥–æ–≤–∞–Ω–∏–µ –ø–∞–ª—å—Ü–µ–≤.mp4", "https://drive.google.com/uc?export=download&id=1iGAfWKSw0fOP8GqsoL2vgh4SJu1PWcfZ"),
    ("—É—Ä–æ–∫10-–Ω–∞–≤–∞–ª–∏–º –±–∞—Å–∞.mp4", "https://drive.google.com/uc?export=download&id=1TSlb12gJ8_wLKetYYvaUPtKG12uNRGLY"),
    ("—É—Ä–æ–∫11-–°—á–µ—Ç –∏ —Ä–∏—Ç–º.mp4", "https://drive.google.com/uc?export=download&id=1nt8Im6wSPvMSPMvfpel3VLhFZww39w-Q"),
    ("—É—Ä–æ–∫12-–í—ã—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ä–∏—Ç–º.mp4", "https://drive.google.com/uc?export=download&id=1AvjUWfvr5E7EAuEPA_6epw8r4GHj8VXm"),
    ("—É—Ä–æ–∫13-–ó–∞–∫—Ä–µ–ø–ª—è–µ–º –ø—Ä–æ–π–¥–µ–Ω–Ω–æ–µ.mp4", "https://drive.google.com/uc?export=download&id=1j1Ppv0Ikb1c5NVC_-dJ8ty6wxhiDnAc"),
    ("—É—Ä–æ–∫14-–ò—Ç–æ–≥–∏ –æ–±—É—á–µ–Ω–∏—è.mp4", "https://drive.google.com/uc?export=download&id=1zbrJEVysFwaEcYe844zzhgWHuanEaJDx"),
    ("—É—Ä–æ–∫15-–†–∞–∑–≤–∏—Ç–∏–µ.mp4", "https://drive.google.com/uc?export=download&id=1zbrJEVysFwaEcYe844zzhgWHuanEaJDx"),
]

# üíæ –•—Ä–∞–Ω–∏–º, –∫–∞–∫–æ–π —É—Ä–æ–∫ –±—ã–ª —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_progress = {}

app = Flask(__name__)

def run_flask():
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))

# üìç –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def start(message):
    keyboard = InlineKeyboardMarkup()
    button = InlineKeyboardButton(text="–£—á–∏—Ç—å—Å—è üé∏", callback_data="learn")
    keyboard.add(button)
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ:", reply_markup=keyboard)

for name, url in lessons:
    download_video_if_needed(name, url)

# üìå –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–£—á–∏—Ç—å—Å—è"
@bot.callback_query_handler(func=lambda call: call.data == "learn")
def handle_learn(call):
    user_id = call.from_user.id
    index = user_progress.get(user_id, 0)

    if index >= len(lessons):
        bot.send_message(call.message.chat.id, "–¢—ã –ø—Ä–æ—à—ë–ª –≤—Å–µ —É—Ä–æ–∫–∏! –ú–æ–ª–æ–¥–µ—Ü! üéâ")
        return

    lesson = lessons[index]
    bot.answer_callback_query(call.id, text="–û—Ç–ø—Ä–∞–≤–ª—è—é —É—Ä–æ–∫...")

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–∏–¥–µ–æ (–º–æ–∂–µ—Ç –±—ã—Ç—å –æ–¥–Ω–æ –∏–ª–∏ –¥–≤–∞)
    for video in lesson["videos"]:
        bot.send_message(call.message.chat.id, video)

    # –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–∞–± ‚Äî –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª
    if "tab" in lesson:
        tab_path = os.path.join("tabs", lesson["tab"])
        if os.path.exists(tab_path):
            with open(tab_path, 'rb') as f:
                bot.send_document(call.message.chat.id, f)
        else:
            bot.send_message(call.message.chat.id, f"–¢–∞–± {lesson['tab']} –Ω–µ –Ω–∞–π–¥–µ–Ω üò¢")

    # –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å
    user_progress[user_id] = index + 1


def run_bot():
    bot.infinity_polling()

# ‚ñ∂ –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    threading.Thread(target=run_flask).start()
    threading.Thread(target=run_bot).start()